<?php 

// Définition heure locale
//setlocale (LC_TIME, 'fr_FR.utf8','fra'); echo (strftime("%A %d %B"));

//config(['app.timezone' => 'Europe/Paris']);


// Connection à la BDD
$bdd = new PDO("mysql:host=aurelipbdd.mysql.db;dbname=aurelipbdd;charset=utf8", "aurelipbdd", "PexGt48JfBYR");


//------------------------------------------------------------ LISTE DES SALARIÉES ------------------------------------------------------------//
$reqEmployee = $bdd->query("SELECT * FROM employees");
$reqEmployee->execute();
while ($resultatEmployee = $reqEmployee->fetch()) {
	$listeIdEmployee[] = $resultatEmployee['id'];												// Liste des id des employées
}
$reqEmployee->closeCursor();	// Fin de la requete
//----------------------------------------------------------------------------------------------------------------------------------------------//


//------------------------------------------------------------ LISTE DES RESSOURCES ------------------------------------------------------------//
$reqRessources = $bdd->query("SELECT nom_sql FROM ressources");
$reqRessources->execute();
while ($resultatRessources = $reqRessources->fetch()) {
	$listeNomSQLDesRessources[] = $resultatRessources['nom_sql'];								// Liste des noms SQL des ressources
}
$reqRessources->closeCursor();	// Fin de la requete
//----------------------------------------------------------------------------------------------------------------------------------------------//



// -- Petit 0 -- Arrivée des valeurs de la requete AJAX ---------------------------------------------------------------------------- Petit 0 -- //

if (isset($_POST['liste_id_prestation'])) {

	// Création d'une liste en PHP
	for ($id = 0; $id < count($_POST['liste_id_prestation']); $id++) {
		$listeDesId[] += $_POST['liste_id_prestation'][$id];
	}
}


// -- Petit 1 -- C'est parti ! on commence par récupérer des infos de la prestation ----------------------------------------------- Petit 1 -- //
// J'ai la liste des id des prestations (via AJAX -> JS) -> $listeDesId

$listeFinale = array();

for ($id = 0; $id < count($listeDesId); $id++) {

	$listeEmployeesHabilitees = array();
	$listeRes = array();

	$reqPrestation = $bdd->prepare("SELECT * FROM prestations WHERE id = ?");
	$reqPrestation->execute(array($listeDesId[$id]));
	$resultatPrestation = $reqPrestation->fetch();


	// -- Petit 2 -- L'employée Habilité à la prestation ? ------------------------------------------------------------------------ Petit 2 -- //
	// J'ai la liste des id des employées -> $listeIdEmployee

	foreach ($listeIdEmployee as $employee) {
		//echo "</br>test employé n° " . $employee;

		// Si employée habilitée, ajouter à la liste
		if($resultatPrestation[$employee] == 1) {
			$listeEmployeesHabilitees[] = $employee;
		} 
	} // Fin du foreach Employee


	// -- Petit 3 -- Récupération de la liste des ressources ------------------------------------------------------------------------ Petit 3 -- //
	// J'ai la liste des ressources -> $listeNomSQLDesRessources

	foreach ($listeNomSQLDesRessources as $ressource) {

		// Si ressource trouvée, ajouter à la liste
		if($resultatPrestation[$ressource] == 1) {
			$listeRes[] = $ressource;
		} 
	} // Fin du foreach Ressources


	// -- Petit 4 -- Création de la prestation avec toutes ces infos ---------------------------------------------------------------- Petit 4 -- //

	// Recherche de la priorite RDV
	$reqPrioriteRdv = $bdd->prepare("SELECT priorite_rdv FROM familles WHERE nom = ?");
	$reqPrioriteRdv->execute(array($resultatPrestation['famille_principale']));
	$resultatPriorite = $reqPrioriteRdv->fetch();

	//Test echo "priorité : ". $resultatPriorite['priorite_rdv'];

	// Création de l'Objet Prestation : 
	$prestation = array(
		"id" => $listeDesId[$id],
		"nom" => $resultatPrestation['nom'],
		"duree" => $resultatPrestation['duree'],
		"battement" => $resultatPrestation['battement'],
		"ressources" => $listeRes,
		"employees" => $listeEmployeesHabilitees,
		"priorite_rdv" => $resultatPriorite['priorite_rdv']
	);

	

	// -- Petit 5 -- Création du RDV Final par ordre de priorité ? (plus tard) ------------------------------------------------------ Petit 5 -- //

	// Ajout du tableau prestation au tableau listeFinale

	$listeFinale[] = $prestation;
	// Ajout au début
	/*
	if($prestation['priorite_rdv'] = 1) {
		array_unshift($listeFinale, $prestation);
	} else {
		// Ajoute à la fin
		$listeFinale[] = $prestation;
	}
	*/

	// Réorganisation des RDV par priorité famille
	// En 1 les epilations
	// En 2 les massage et soins
	// En 3 le reste

}// Fin boucle FOR récupération des infos des prestations par id sélectionnées

$reqPrestation->closeCursor();	// Fin de la requete
$reqPrioriteRdv->closeCursor();	// Fin de la requete
	

/*	
echo '</br> Méga tableau : ';
foreach ($listeFinale as $truc) {
	echo '</br> Prestation : ';
	print_r($truc);

	echo '</br> Id : ';
	echo $truc['employees'][0];
}
*/


// -- Petit 6 -- On vérifie que les employées sont habilitées sur TOUTES les prestations -------------------------------------------- Petit 6 -- //
// Scénario ou on ne divise pas un RDV en plusieurs employées

// Compteur prestations
$count = 0;

// Pour chaque Prestation de la liste
foreach ($listeFinale as $prestation) {

	// Boucle sur toutes les employées de l'institut pour trouver les habilitées
	foreach ($listeIdEmployee as $employee) {

		// If première prestation
		if($count == 0) {

			// Si dans la liste des personnes habilité de la presta alors on l'ajoute à la liste principale
			if(in_array($employee, $prestation['employees'])) {
				$listeDesEmployeesHabilitees[] = $employee;
			}

		// Si seconde prestation
		} else {

			// Employée Habilitée ?
			if(in_array($employee, $prestation['employees'])) {
				// 1 Déjà dans l'array, ne rien faire, c'est cool
				// 2 N'est pas dans l'array ! C'est qu'elle ne connait pas toutes les prestas

			// Non habilitée, vérifier qu'elle n'est pas dans l'array et la supprimée si elle y est
			} elseif(in_array($employee, $listeDesEmployeesHabilitees)) {
				unset($listeDesEmployeesHabilitees[array_search($employee, $listeDesEmployeesHabilitees)]);
			} 
		} // Fin du "Seconde Prestation"
	} // Fin du FOREACH Employées
	$count += 1; // +1 prestation
} // Fin du FOREACH Prestations

// On récupère la liste finale des Employées Habilitées à toutes les prestations sélectionnées : 	$listeDesEmployeesHabilitees



//--------------------------------------------------------- LISTE DES JOURS À AFFICHER ---------------------------------------------------------//
$nombreDeJoursAAfficher = 7;															// Définir le nombre de jours à afficher

if (1 == 0) { //type jourdebut['POST']...												// Récupérer la valeur d'un bouton JS pour modifier l'affichage
 	//$jourDebut = "";
	//$jourFin = $jourDebut + $nombreDeJoursAAfficher;
} else {
 	$jourDebut = 0;
	$jourFin = $nombreDeJoursAAfficher;
}
//----------------------------------------------------------------------------------------------------------------------------------------------//


//----------------------------------------------------------- AFFICHAGE DES CRENEAUX -----------------------------------------------------------//

//--1-- JOURNÉE -------------------------------------------------------------------

for ($jour = $jourDebut; $jour <= $jourFin; $jour++) {

	// Message Console
	?><script>console.log('Début étape 1 : Journée')</script><?php

	$jourEnCours_1 = strftime('%A', strtotime('+' . $jour . ' day'));

	if ($jourEnCours_1 === "Monday") {
		$jourEnCours = "lundi";
	}
	if ($jourEnCours_1 === "Tuesday") {
		$jourEnCours = "mardi";
	}
	if ($jourEnCours_1 === "Wednesday") {
		$jourEnCours = "mercredi";
	}
	if ($jourEnCours_1 === "Thursday") {
		$jourEnCours = "jeudi";
	} 
	if ($jourEnCours_1 === "Friday") {
		$jourEnCours = "vendredi";
	}
	if ($jourEnCours_1 === "Saturday") {
		$jourEnCours = "samedi";
	} 
	if ($jourEnCours_1 === "Sunday") {
		$jourEnCours = "dimanche";
	}

	$moisEnCours = strftime('%B', strtotime('+' . $jour . ' day'));

	if ($moisEnCours === "January") {
		$moisEnCoursFR = "janvier";
	}
	if ($moisEnCours === "February") {
		$moisEnCoursFR = "février";
	}
	if ($moisEnCours === "March") {
		$moisEnCoursFR = "mars";
	}
	if ($moisEnCours === "April") {
		$moisEnCoursFR = "avril";
	} 
	if ($moisEnCours === "May") {
		$moisEnCoursFR = "mai";
	}
	if ($moisEnCours === "June") {
		$moisEnCoursFR = "juin";
	} 
	if ($moisEnCours === "July") {
		$moisEnCoursFR = "juillet";
	}
	if ($moisEnCours === "August") {
		$moisEnCoursFR = "août";
	}
	if ($moisEnCours === "September") {
		$moisEnCoursFR = "septembre";
	}
	if ($moisEnCours === "October") {
		$moisEnCoursFR = "octobre";
	}
	if ($moisEnCours === "November") {
		$moisEnCoursFR = "novembre";
	} 
	if ($moisEnCours === "December") {
		$moisEnCoursFR = "décembre";
	}


	$nomJourneeFr = ucfirst(strftime($jourEnCours . ' %d ', strtotime('+' . $jour . ' day')));
	$nomJourneeFr .= utf8_encode(ucfirst(strftime($moisEnCoursFR .' %Y', strtotime('+' . $jour . ' day'))));
	$daterdv = strftime('%G-%m-%d', strtotime('+' . $jour . ' day'));

	?>
	<div class="d-flex justify-content-between align-items-center col-12">
		<h5><?php echo $nomJourneeFr; ?></h5>
		<!-- Fleche d'affichage / masquage de la liste
		<button class="btn btn-link text-dark"><i class="fa fa-angle-down"></i></button>--> 
	</div> <!-- Fin d-flex, nom de la journée -->
	<div class="col-12">
		<hr> <!-- Séparateur journées -->
	</div>
	<?php


	//--2-- HORAIRES DU JOUR DE L'INSTITUT -------------------------------------------------------------------

	// Message Console
	?><script>console.log('Début étape 2 : Horaires du jour')</script><?php

	$reqHoraires = $bdd->prepare("SELECT * FROM horaires_institut WHERE nom_jour = ?");
	$reqHoraires->execute(array($jourEnCours));
	$resultat = $reqHoraires->fetch();

	// HEURE D'OUVERTURE (Si aujourd'hui, alors l'heure d'ouverture est modifiée en : "la prochaine heure à partir de maintenant")
	if ($jour == 0) {

		// Rehcherche de l'heure d'ouverture et de l'heure actuelle
		$heureOuverture = strftime('%k', strtotime($resultat['ouverture']));
		$minutesOuverture = strftime('%M', strtotime($resultat['ouverture']));
		$ouvertureDuJour = mktime($heureOuverture, $minutesOuverture, 00, strftime('%m'), strftime('%d'), strftime('%g'));
		$heureActuelle = mktime(strftime('%k'), strftime('%M'), 00, strftime('%m'), strftime('%d'), strftime('%g'));

		// Comprend pas pourquoi "<" et pas ">" ! Mais ça fonctionne !
		if ($ouvertureDuJour < $heureActuelle) {
			$heureOuverture = strftime('%k', strtotime('+30 minutes'));
			$minutesOuverture = strftime('%M', strtotime('+30 minutes'));
			// Arrondi a 10 mins supérieur
			while ($minutesOuverture%10 != 0) {
				$minutesOuverture += 1;
				// Si minutes = 60, alors on passe à 00
				if($minutesOuverture == 60) {
					$minutesOuverture = 0;
				}
			}
		} else {
			$heureOuverture = strftime('%k', strtotime($resultat['ouverture']));
			$minutesOuverture = strftime('%M', strtotime($resultat['ouverture']));
		}
	} else {
		$heureOuverture = strftime('%k', strtotime($resultat['ouverture']));
		$minutesOuverture = strftime('%M', strtotime($resultat['ouverture']));
	}
	$ouvertureDuJour = mktime($heureOuverture, $minutesOuverture, 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));

	// HEURE DE FERMETURE
	$heureFermeture = strftime('%k', strtotime($resultat['fermeture']));
	$minutesFermeture = strftime('%M', strtotime($resultat['fermeture']));
	$fermetureDuJour = mktime($heureFermeture, $minutesFermeture, 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));

	$reqHoraires->closeCursor();	// Fin de la requete


	// Heure d'ouverture : 		$ouvertureDuJour
	// Heure fermeture : 		$fermetureDuJour



	// -- 3 -- EMPLOYÉE EN JOUR OFF ? -------------------------------------------------------------------

	foreach ($listeDesEmployeesHabilitees as $employee) {

		// Message Console
		?><script>console.log('Début étape 3 : Employée en Jour Off')</script><?php

		$reqJourOff = $bdd->prepare("SELECT debut_shift_1 FROM heures_employees WHERE id_employee = ? AND jour_shift = ?");
		$reqJourOff->execute(array($employee, $daterdv));
		$resultatJourOff = $reqJourOff->fetch();

		// Si il n'y a pas d'horaires pour le shift 1, c'est que la journée est OFF
		if ($resultatJourOff['debut_shift_1'] != 0) {
			$jourOff = false;
		} else {
			$jourOff = true;
		}

		$reqJourOff->closeCursor();	// Fin de la requete

		// -- 4 -- AFFICHAGE DES EMPLOYEES DISPONIBLES CE JOUR ------------------------------------------------------------

		if ($jourOff == false) {

			// Message Console
			?><script>console.log('Début étape 4 : Affichage des employées ce jour')</script><?php

			// Mini requete de récupération du prénom
			$reqPrenom = $bdd->prepare("SELECT prenom FROM employees WHERE id = ?");
			$reqPrenom->execute(array($employee));
			$resultatPrenom = $reqPrenom->fetch();

			?>
			<div class="col-12">

				<!-- Nom de l'employée -->
				<div class="d-flex justify-content-between align-items-center">
					<h6><i class="fa fa-user"></i>  <?php echo $resultatPrenom['prenom']; ?></h6>
				</div> <!-- Fin affichage du nom de l'employée -->

				<div class="row"> <!-- Début, Row des créneaux -->

				<?php

				// -- 5 -- CRÉATION DES CREANAUX HORAIRES ------------------------------------------------------------

				// Message Console
				?><script>console.log('Début étape 5 : Création des créneaux')</script><?php

				// Initialisation de l'interval de base
				$interval = 600;					// 10 minutes en secondes

				// TEST Heure Ouverture du jour
				//echo strftime('%k:%M:%S', $ouvertureDuJour);

				for ($creneau = $ouvertureDuJour; $creneau < $fermetureDuJour; $creneau += $interval) {

					// Initialisation
					$listePrestationsValidees = array();
					$finCreneauPrestation = 0;
					$listeRessourcesGenerale = array();

					// -- 6 -- Début FOREACH Prestations -----------------------------------------------------------------------------------------------------
					foreach ($listeFinale as $prestation) {

						// Message Console
						?><script>console.log('Début étape 6 : Check chaque prestations')</script><?php

						// Si ce n'est pas la première prestation, alors l'heure de début est égale à la fin du précédent RDV
						if ($finCreneauPrestation != 0) {
							$creneauRDV = $finCreneauPrestation;
						} else {
							$creneauRDV = $creneau;
						}

						// Mise au format SQL
						$heurerdv = strftime('%k:%M:%S', $creneauRDV); // ok

						 // On recherche la prestation 
						$reqPrestation = $bdd->prepare("SELECT duree, battement FROM prestations WHERE id = ?");
						$reqPrestation->execute(array($prestation['id']));
						$resultatPrestation = $reqPrestation->fetch();

						// Convertir la duree en secondes
						$dureePrestation = intval($resultatPrestation['duree']) * 60;
						$battementPrestation = intval($resultatPrestation['battement']) * 60;
						$finCreneauPrestation = $creneauRDV + $dureePrestation + $battementPrestation;

						$reqPrestation->closeCursor();	// Fin de la requete Prestation

						//6.1 Disponibilité de l'employée -----------------------------------------------------------------------------------------------------

						// 6.1.1 Employée en shift ? -----------------------------------------------------------------------------------------------------

						// Message Console
						?><script>console.log('Début étape 6.1.1 : Employée en shift ?')</script><?php

						// Initialisation 
						$employeedisponible = false;

						$reqShift = $bdd->prepare("SELECT * FROM heures_employees WHERE id_employee = ? AND jour_shift = ?");
						$reqShift->execute(array($employee, $daterdv));
						$resultatshift = $reqShift->fetch();

						if ($resultatshift['debut_shift_1'] != 0) {
							// Conversion en timestamp pour opérations logique à suivre
							$hDebutShift1 = strftime('%k', strtotime($resultatshift['debut_shift_1']));
							$mDebutShift1 = strftime('%M', strtotime($resultatshift['debut_shift_1']));
							$heureDebutShift1 = mktime($hDebutShift1, $mDebutShift1, 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));

							// Conversion en timestamp pour opérations logique à suivre
							$hFinShift1 = strftime('%k', strtotime($resultatshift['fin_shift_1']));
							$mFinShift1 = strftime('%M', strtotime($resultatshift['fin_shift_1']));
							$heureFinShift1 = mktime($hFinShift1, $mFinShift1, 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));

							if ($creneauRDV >= $heureDebutShift1 AND $creneauRDV < $heureFinShift1 AND $finCreneauPrestation <= $heureFinShift1) {
								$employeedisponible = true;	// -> Shift n°1
							}

							// SI Shift 2 ---------------------------------------------------------------------------------

							if ($resultatshift['debut_shift_2'] != 0) {
							 	// Conversion en timestamp pour opérations logique à suivre
								$hDebutShift2 = strftime('%k', strtotime($resultatshift['debut_shift_2']));
								$mDebutShift2 = strftime('%M', strtotime($resultatshift['debut_shift_2']));
								$heureDebutShift2 = mktime($hDebutShift2, $mDebutShift2, 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));

								// Conversion en timestamp pour opérations logique à suivre
								$hFinShift2 = strftime('%k', strtotime($resultatshift['fin_shift_2']));
								$mFinShift2 = strftime('%M', strtotime($resultatshift['fin_shift_2']));
								$heureFinShift2 = mktime($hFinShift2, $mFinShift2, 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));

							 	if ($creneauRDV >= $heureDebutShift2 AND $creneauRDV < $heureFinShift2 AND $finCreneauPrestation <= $heureFinShift2) {
							 		$employeedisponible = true;	// -> Shift n°2
							 	}

								// SI Shift 3 -----------------------------------------------------------------------------

								if ($resultatshift['debut_shift_3'] != 0) {
									// Conversion en timestamp pour opérations logique à suivre
									$hDebutShift3 = strftime('%k', strtotime($resultatshift['debut_shift_3']));
									$mDebutShift3 = strftime('%M', strtotime($resultatshift['debut_shift_3']));
									$heureDebutShift3 = mktime($hDebutShift3, $mDebutShift3, 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));

									// Conversion en timestamp pour opérations logique à suivre
									$hFinShift3 = strftime('%k', strtotime($resultatshift['fin_shift_3']));
									$mFinShift3 = strftime('%M', strtotime($resultatshift['fin_shift_3']));
									$heureFinShift3 = mktime($hFinShift3, $mFinShift3, 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));

									if ($creneauRDV >= $heureDebutShift3 AND $creneauRDV < $heureFinShift3 AND $finCreneauPrestation <= $heureFinShift3) {
										$employeedisponible = true;	// -> Shift n°3
									} 
								} 
							} 
						} 

						$reqShift->closeCursor();	// Fin de la requete Shift
						

						// 6.1.2 Employée en RDV ? -----------------------------------------------------------------------------------------------------

						// Message Console
						?><script>console.log('Début étape 6.1.2 : Employée en RDV ?')</script><?php

						// Initialisation
						$listeEnRendezVous = array();

						// Requete (si RDV avec la ressource sélectionnée ce jour, alors on les récupère)
						$reqRdv = $bdd->prepare("SELECT prestation, heure_debut, heure_fin_bat, id_employee FROM rendezvous WHERE date_rdv = ? AND id_employee = ?");
						$reqRdv->execute(array($daterdv, $employee));

					
						// Tant que tu trouves des résultats (cabine et jour du rdv)
						while ($resultatRdv = $reqRdv->fetch()) {

							// Conversion Heure début et heure fin au format timestamp pour comparer le créneau
							// Heure debut occupation ressource  (mktime HH:MM:SS MM/JJ/YYYY)
							$heureDebutRdv = mktime(strftime('%k', strtotime($resultatRdv['heure_debut'])), strftime('%M', strtotime($resultatRdv['heure_debut'])), 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));

							// Heure fin occupation ressource (mktime HH:MM:SS MM/JJ/YYYY)
							$heureFinRdv = mktime(strftime('%k', strtotime($resultatRdv['heure_fin_bat'])), strftime('%M', strtotime($resultatRdv['heure_fin_bat'])), 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));


							// Si le créneau est compris dans un moment ou la ressource est occupée OU que le fin du créneau tombe dans une période d'occupation
							if ($creneauRDV >= $heureDebutRdv AND $creneauRDV < $heureFinRdv OR $finCreneauPrestation > $heureDebutRdv AND $finCreneauPrestation < $heureFinRdv) {
								if(!in_array($employee, $listeEnRendezVous)){
									$listeEnRendezVous[] = $employee;
								}
							} 
						} 

						$reqRdv->closeCursor();	// Fin de la requete Shift


						//6.2 Boucles sur les ressources de la prestation  -----------------------------------------------------------------------------------------------------

						// Initialisation
						$listeRessourcesDispos = array();
						$listeRessourcesNonDispos = array();

						// Requete (si RDV avec la ressource sélectionnée ce jour, alors on les récupère)


						foreach ($prestation['ressources'] as $ressource) {

							// Message Console
							?><script>console.log('Début étape 6.2 : Boucles sur les ressources de la prestation')</script><?php

							// On part du prinicpe que la ressource est dispo sauf preuve du contraire
							$disponibiliteRessource = true;

							// Requete (si RDV avec la ressource sélectionnée ce jour, alors on les récupère)
							$reqRessource = $bdd->prepare("SELECT heure_debut, heure_fin_bat, ressource FROM rendezvous WHERE date_rdv = ? AND ressource_sql = ?");
							$reqRessource->execute(array($daterdv, $ressource));

							// Si il y a des résultats
							if ($reqRessource->fetch()) {

								// Requete (si RDV avec la ressource sélectionnée ce jour, alors on les récupère)
								$reqRessource = $bdd->prepare("SELECT heure_debut, heure_fin_bat, ressource FROM rendezvous WHERE date_rdv = ? AND ressource_sql = ?");
								$reqRessource->execute(array($daterdv, $ressource));
								
								// Tant que tu trouves des résultats (cabine et jour du rdv)
								while ($resultatRessource = $reqRessource->fetch()) {


									// Conversion Heure début et heure fin au format timestamp pour comparer le créneau
									// Heure debut occupation ressource  (mktime HH:MM:SS MM/JJ/YYYY)
									$heureDebutOccupation = mktime(strftime('%k', strtotime($resultatRessource['heure_debut'])), strftime('%M', strtotime($resultatRessource['heure_debut'])), 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));

									// Heure fin occupation ressource (mktime HH:MM:SS MM/JJ/YYYY)
									$heureFinOccupation = mktime(strftime('%k', strtotime($resultatRessource['heure_fin_bat'])), strftime('%M', strtotime($resultatRessource['heure_fin_bat'])), 00, strftime('%m', strtotime('+' . $jour . ' day')), strftime('%d', strtotime('+' . $jour . ' day')), strftime('%g', strtotime('+' . $jour . ' day')));


									// Si le créneau est compris dans un moment ou la ressource est occupée OU que le fin du créneau tombe dans une période d'occupation
									if ($creneauRDV >= $heureDebutOccupation AND $creneauRDV < $heureFinOccupation OR $finCreneauPrestation > $heureDebutOccupation AND $finCreneauPrestation < $heureFinOccupation) {
										if(!in_array($ressource, $listeRessourcesNonDispos)) {
											$listeRessourcesNonDispos[] = $ressource;
										}
									}
								} // Fin du WHILE Ressource

							// Else, aucun RDV avec cette ressource ce jour
							} 
						} // Fin du FOREACH Ressource


						// AFFICHAGE DU CRENEAU ---------------------------------------------------------------------------------------------------------------------
						// Texte pour popover provisoire
						$test = "Employée dispo : " . $employeedisponible . " / ";
						$test .= "Employée en rdv : " . count($listeEnRendezVous) . " / ";
						$test .= 'Ressources prises : ' . count($listeRessourcesNonDispos) .'/' . count($prestation['ressources']) . " / ";
						$test .= "Fin de prestation : " . strftime('%k' .'h'.'%M', $finCreneauPrestation) . " / "; 

						// SI employée en shift = true, employée en rdv = false et cabine dispo > 1 
						if ($employeedisponible == true AND count($listeEnRendezVous) < 1 AND count($listeRessourcesNonDispos) < count($prestation['ressources'])) {
							$listePrestationsValidees[] += $prestation['id'];

							// Liste générale, prestation par prestation (Presta 1 : Cabine 1 et 2, Presta 2 : Cabine 3...)

							foreach ($prestation['ressources'] as $ressource) {
								if (!in_array($ressource, $listeRessourcesNonDispos)) {
									$listeRessourcesDispos[] = $ressource;
								} 
							}

							// Ajout de la liste des pratation dispo (POUR CETTE PRESTATION) à la liste générale
							$listeRessourcesGenerale[] = $listeRessourcesDispos;
											
						}

					}  // Fin du FOREACH Prestation

					// Si toutes les prestations sont validées, Affichage du créneau -----------------------------------------------------------------------------------------------------
					if(count($listePrestationsValidees) == count($listeFinale)) {

						?>
						<div class="col-6 col-md-2 col-xl-3">
							<form method="POST" action="php/cible.php">
								<?php

								$compteurPrestation = 0;
								foreach ($listeFinale as $prestation) {
									$compteurPrestation += 1;
									?>
									<input type="hidden" name="<?php echo 'idNumero'. $compteurPrestation ;?>" value="<?php echo $prestation['id']; ?>">
									<?php
								}

								$compteurRessource = 0;
								foreach ($listeRessourcesGenerale as $listeRessource) {
									$compteurRessource += 1;

									// Array pop = uniquement la dernière valeur de chaque listes de ressources/prestations
									?>
									<input type="hidden" name="<?php echo 'ressourceNumero'. $compteurRessource ;?>" value="<?php echo array_pop($listeRessource); ?>">
									<?php
								}
								?>
								<input type="hidden" name="nombrePrestations" value="<?php echo count($listeFinale); ?>">
								<input type="hidden" name="heureSelect" value="<?php echo $creneau; ?>">
								<input type="hidden" name="employee" value="<?php echo $employee; ?>">
								<input type="hidden" name="nomJournee" value="<?php echo $nomJourneeFr; ?>">
								<button type="submit" name="validationPresta" class="btn btn-dark btn-block heure heure-rdv" data-toggle="tooltip" data-placement="bottom" title="<?php echo $test; ?>"><?php echo strftime('%k' .'h'.'%M', $creneau); ?></button>
							</form>
						</div>
						<?php
					} else {
						?>
						<div class="col-6 col-md-2 col-xl-3">
							<button type="button" class="btn btn-light btn-block heure" data-toggle="tooltip" data-placement="bottom" title="<?php echo $test; ?>" disabled><?php echo strftime('%k' .'h'.'%M', $creneau); ?></button>
						</div>
						<?php
					}

				} // Fin du FOR Créneau
				?>
		
				</div> <!-- Fin row des créneaux -->
				<hr> <!-- Séparateur employées -->
			</div> <!-- Fin col-12 employée -->
			<?php

			$reqPrenom->closeCursor();	// Fin de la requete Prénom


		} // Fin du IF !jourOff
	} // Fin du FOREACH employées habilitées
} // Fin du FOR journée
?>



<div class="col-12">
	<button type="button" class="btn btn-dark btn-block heure"><i class="fa fa-plus"></i> PLUS</button>
</div>